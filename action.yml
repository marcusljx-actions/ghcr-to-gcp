name: 'GitHub to Google Cloud'
author: 'marcusljx'
description: 'Move Container from GitHub Container Registry to Google Cloud Artifact Registry'

inputs:
  github_token:
    description: 'GitHub Token'
    required: true
  container_slug:
    description: 'Name of the container'
    required: false
    default: ${{ github.repository }}
  release_tag:
    description: 'Release tag of the container'
    required: false
    default: 'latest'
  gcp_service_region:
    description: 'Service Region for GCP Project'
    required: true
  gcp_service_account_key:
    description: 'Service Account Key for GCP Project. Typically placed in secrets.'
    required: true
  gcp_project_id:
    description: 'Project ID for GCP Project. Typically placed in secrets.'
    required: true
  gcp_container_repository:
    description: 'Artifact Registry Container Repository for GCP Project. Typically placed in secrets.'
    required: true

outputs:
  container_path:
    description: 'URI of the container that was pushed to GCP (without release tag)'
    value: ${{ steps.vars.outputs.gcp_container_path }}
  container_path_full:
    description: 'URI of the container that was pushed to GCP'
    value: ${{ steps.vars.outputs.gcp_container_path_full }}

runs:
  using: "composite"
  steps:
    - uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ inputs.gcp_project_id }}
        service_account_key: ${{ inputs.gcp_service_account_key }}
        export_default_credentials: true

    - id: vars
      shell: bash
      run: |
        echo "::set-output name=gh_container_path::ghcr.io/${{ inputs.container_slug }}"
        echo "::set-output name=gh_container_path_full::ghcr.io/${{ inputs.container_slug }}:${{ inputs.release_tag }}"
        echo "::set-output name=gcp_container_path::${{ inputs.gcp_service_region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/${{ inputs.gcp_container_repository }}/${{ inputs.container_slug }}"
        echo "::set-output name=gcp_container_path_full::${{ inputs.gcp_service_region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/${{ inputs.gcp_container_repository }}/${{ inputs.container_slug }}:${{ inputs.release_tag }}"

##################################################################################################
# TODO: Uncomment Commented sections when https://github.com/actions/runner/issues/834 has merged
##################################################################################################
#    - id: gcp_artifacts_check
#      shell: bash
#      run: |
#        gcloud artifacts docker images list ${{ steps.vars.outputs.gcp_container_path }} --include-tags --filter "TAGS=${{ inputs.release_tag }}" \
#        | grep "${{ inputs.release_tag }}" \
#        && echo ::set-output name=contains_tag::0 \
#        || echo ::set-output name=contains_tag::1
#
#    - shell: bash
#      run: echo "Container with tag ${{ inputs.release_tag }} already exists in GCP Artifact Registry. Exiting."
#      if: ${{ steps.gcp_artifacts_check.outputs.contains_tag == '0' }}

    - uses: docker/login-action@v1
#      if: ${{ steps.gcp_artifacts_check.outputs.contains_tag == '1' }}
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github_token }}

    - shell: bash
#      if: ${{ steps.gcp_artifacts_check.outputs.contains_tag == '1' }}
      run: docker pull ${{ steps.vars.outputs.gh_container_path_full }}

    - shell: bash
#      if: ${{ steps.gcp_artifacts_check.outputs.contains_tag == '1' }}
      run: gcloud auth configure-docker ${{ inputs.gcp_service_region }}-docker.pkg.dev

    - shell: bash
#      if: ${{ steps.gcp_artifacts_check.outputs.contains_tag == '1' }}
      run: docker tag ${{ steps.vars.outputs.gh_container_path_full }} ${{ steps.vars.outputs.gcp_container_path_full }}

    - shell: bash
#      if: ${{ steps.gcp_artifacts_check.outputs.contains_tag == '1' }}
      run: docker push ${{ steps.vars.outputs.gcp_container_path_full }}